- name: Cache NuGet packages
  uses: actions/cache@v3
  with:
    path: ~/.nuget/packages
    key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln') }}
    restore-keys: |
      ${{ runner.os }}-nuget-
      
- name: Build the solution
  run: msbuild ${{ env.Solution_Name }} /p:Configuration=${{ matrix.configuration }}

- name: Run Code Analysis
  run: dotnet format --check
  
name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: MemoryCards.sln                         # Solution name
      Test_Project_Path: MemoryCards.Tests\MemoryCards.Tests # Test project path
      Wap_Project_Directory: MemoryCards                     # WAP project directory relative to the solution
      Wap_Project_Path: MemoryCards\MemoryCards.wapproj      # WAP project path

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Execute unit tests
      run: dotnet test ${{ env.Test_Project_Path }}

    - name: Restore the application
      run: msbuild ${{ env.Solution_Name }} /t:Restore /p:Configuration=${{ matrix.configuration }}

    - name: Decode the PFX Certificate
      if: secrets.Base64_Encoded_Pfx != ''
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Create the app package
      run: msbuild ${{ env.Wap_Project_Path }} /p:Configuration=${{ matrix.configuration }} /p:UapAppxPackageBuildMode=${{ env.Appx_Package_Build_Mode }} /p:AppxBundle=${{ env.Appx_Bundle }} /p:AppxBundlePlatforms=${{ env.Appx_Bundle_Platforms }}
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86|x64
        Appx_Package_Build_Mode: StoreUpload

    - name: Remove the PFX Certificate
      if: secrets.Base64_Encoded_Pfx != ''
      run: Remove-Item -path $env:Wap_Project_Directory\GitHubActionsWorkflow.pfx

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages
